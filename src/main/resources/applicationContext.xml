<?xml version="1.0" encoding="UTF-8"?>

<!--Validate the tags and manage the schema location of these tags-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- bean definitions here -->
    <bean id = "sim" class = "org.dev.ioc.Vodafone"></bean>

<!--    This is a constructor dependency injection so we need to provide values in constructor instead of property tag-->
    <bean id = "student" class="org.dev.di.Student">
        <constructor-arg name = "studentName" value="Rakesh Guru" type="java.lang.String"/>
        <constructor-arg name = "age" value="18" />
    </bean>

    <bean id = "student1" class="org.dev.di.Student">
        <constructor-arg name = "age" value="25" type="int" />
    </bean>


<!--&lt;!&ndash;    This is an object dependency injection &ndash;&gt;-->
<!--    <bean id="student2" class="org.dev.di_object_type.Student">-->
<!--        <property name="mathCheat">-->
<!--&lt;!&ndash;            for inner bean we don't give id  because it is not required&ndash;&gt;-->
<!--            <bean class="org.dev.di_object_type.MathCheat" />-->
<!--        </property>-->
<!--    </bean>-->

<!--    &lt;!&ndash;    There is another way to configure inner bean &ndash;&gt;-->
<!--    <bean id="newStudent" class="org.dev.di_object_type.NewStudent">-->
<!--        <property name="mathCheat">-->
<!--            &lt;!&ndash;            for inner bean we don't give id  because it is not required&ndash;&gt;-->
<!--            <bean class="org.dev.di_object_type.MathCheat" />-->
<!--        </property>-->
<!--    </bean>-->


<!--    One problem in above is that we are creating two match cheat object for different student, it is not a good approach-->
<!--    If we have 100 students then as per above approach we need to create 100 math cheat objects which is not good -->

<!--    So we will fix it and try to make one math cheat object which can circulate among n number of students-->
<!--    For that we first remove the MathCheat bean from the property and explicitly define math cheat object-->
<!--    And inside the inner property we will add math cheat object reference-->



<!--    <bean id="mathCheatObj" class="org.dev.di_object_type.MathCheat" />-->

<!--    <bean id="stud" class="org.dev.di_object_type.Student">-->
<!--        <property name="mathCheat" ref="mathCheatObj" />-->
<!--    </bean>-->

<!--    <bean id="newStud" class="org.dev.di_object_type.NewStudent">-->
<!--        <property name="mathCheat" ref="mathCheatObj" />-->
<!--    </bean>-->



<!--    Loose coupling -->

<!--    <bean id="scienceCheatObj" class="org.dev.loose_coupling.ScienceCheat" />-->
<!--    <bean id="stud" class="org.dev.loose_coupling.Student">-->
<!--        <property name="cheat" ref="scienceCheatObj" />-->
<!--    </bean>-->

    <bean id="mathCheatObj" class="org.dev.loose_coupling.MathCheat" />
    <bean id="stud" class="org.dev.loose_coupling.Student">
        <property name="cheat" ref="mathCheatObj" />
    </bean>


</beans>

